{
    "swagger": "2.0",
    "info": {
        "description": "The case study for the position of Go developer @Getir",
        "title": "Getir Coding Assignment",
        "contact": {
            "name": "Fabio Bozzo",
            "email": "fabio.bozzo@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/fetch": {
            "post": {
                "description": "Filter records by date and total count range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fetch"
                ],
                "summary": "Fetch records from DB",
                "operationId": "fetch-post",
                "parameters": [
                    {
                        "description": "Search Filter",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/fetch.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/in-memory": {
            "get": {
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "In-Memory"
                ],
                "summary": "Find/Read a key-value pair from the in-mem storage",
                "operationId": "in-memory-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "key of the key-value pair",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Only non-empty values are accepted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "In-Memory"
                ],
                "summary": "Insert a key-value pair in the in-mem storage",
                "operationId": "in-memory-post",
                "parameters": [
                    {
                        "description": "Key-Value Pair",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inmemory.request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "fetch.request": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "maxCount": {
                    "type": "integer"
                },
                "minCount": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "inmemory.request": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}